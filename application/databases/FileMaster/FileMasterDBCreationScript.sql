DROP TABLE ALGORITHM_MASTER CASCADE CONSTRAINTS;
DROP TABLE FEATURE_VECTOR_MASTER CASCADE CONSTRAINTS;
DROP TABLE IMAGES_TABLE_MASTER CASCADE CONSTRAINTS;
DROP TABLE IMAGE_FEATURES_MASTER CASCADE CONSTRAINTS;
DROP TABLE SLAVES_KEY_MASTER CASCADE CONSTRAINTS;
DROP TABLE USERS_KEY_MASTER CASCADE CONSTRAINTS;


CREATE TABLE USERS_KEY_MASTER
(
  ID INTEGER NOT NULL,
  TOKEN VARCHAR2(130)
);

CREATE TABLE ALGORITHM_MASTER
  (
  ID INTEGER NOT NULL , NAME VARCHAR2 (50) NOT NULL
  ) ;
ALTER TABLE ALGORITHM_MASTER ADD CONSTRAINT ALGORITHM_PK_MASTER PRIMARY KEY ( ID ) ;


CREATE TABLE FEATURE_VECTOR_MASTER
  (
    ID           INTEGER NOT NULL ,
    PATH         VARCHAR2 (1024) NOT NULL ,
    ALGORITHM_ID INTEGER NOT NULL
  ) ;
ALTER TABLE FEATURE_VECTOR_MASTER ADD CONSTRAINT FEATURE_VECTOR_PK_MASTER PRIMARY KEY ( ID ) ;


CREATE TABLE IMAGES_TABLE_MASTER
  (
    ID   INTEGER NOT NULL ,
    LINK VARCHAR2 (1024) NOT NULL
  ) ;
ALTER TABLE IMAGES_TABLE_MASTER ADD CONSTRAINT IMAGES_TABLE_PK_MASTER PRIMARY KEY ( ID ) ;


CREATE TABLE IMAGE_FEATURES_MASTER
  (
    IMAGE_ID   INTEGER NOT NULL ,
    FEATURE_ID INTEGER NOT NULL
  ) ;
  
CREATE TABLE SLAVES_KEY_MASTER
(
  ID INTEGER NOT NULL,
  LINK VARCHAR(1024),
  TOKEN varchar(130),
  MAX_DB_SIZE INTEGER NOT NULL,
  CURRET_DB_SIZE INTEGER NOT NULL,
  uploading VARCHAR(1) DEFAULT 0
);

ALTER TABLE FEATURE_VECTOR_MASTER ADD CONSTRAINT FEAT_ALGORITHM_FK_MASTER FOREIGN KEY ( ALGORITHM_ID ) REFERENCES ALGORITHM_MASTER ( ID ) ;

ALTER TABLE IMAGE_FEATURES_MASTER ADD CONSTRAINT IMAGE_FEAT_FEAT_FK_MASTER FOREIGN KEY ( FEATURE_ID ) REFERENCES FEATURE_VECTOR_MASTER ( ID ) ;

ALTER TABLE IMAGE_FEATURES_MASTER ADD CONSTRAINT IMAGE_FEAT_IMAG_FK_MASTER FOREIGN KEY ( IMAGE_ID ) REFERENCES IMAGES_TABLE_MASTER ( ID ) ;


--------------------------------------------------------------------------------
-- TRIGGERS --------------------------------------------------------------------
--------------------------------------------------------------------------------
DROP SEQUENCE FEATURE_VECTOR_SEQ_MASTER; 
CREATE SEQUENCE FEATURE_VECTOR_SEQ_MASTER START WITH 1;
/
CREATE OR REPLACE TRIGGER FEATURE_VECTOR_TRIGGER_MASTER
BEFORE INSERT ON FEATURE_VECTOR_MASTER
FOR EACH ROW
BEGIN
  SELECT FEATURE_VECTOR_SEQ_MASTER.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

DROP SEQUENCE ALGORITHM_SEQ_MASTER; 
CREATE SEQUENCE ALGORITHM_SEQ_MASTER START WITH 1;
/
CREATE OR REPLACE TRIGGER ALGORITHM_ID_TRIGGER_MASTER
BEFORE INSERT ON ALGORITHM_MASTER
FOR EACH ROW
BEGIN
  SELECT ALGORITHM_SEQ_MASTER.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

DROP SEQUENCE IMAGES_TABLE_SEQ_MASTER; 
CREATE SEQUENCE IMAGES_TABLE_SEQ_MASTER START WITH 1;
/
CREATE OR REPLACE TRIGGER IMAGES_TABLE_TRIGGER_MASTER
BEFORE INSERT ON IMAGES_TABLE_MASTER
FOR EACH ROW
BEGIN
  SELECT IMAGES_TABLE_SEQ_MASTER.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

DROP SEQUENCE SLAVES_KEY_SEQ_MASTER; 
CREATE SEQUENCE SLAVES_KEY_SEQ_MASTER START WITH 1;
/
CREATE OR REPLACE TRIGGER SLAVES_KEY_TRIGGER_MASTER
BEFORE INSERT ON SLAVES_KEY_MASTER
FOR EACH ROW
BEGIN
  SELECT SLAVES_KEY_SEQ_MASTER.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

DROP SEQUENCE USERS_KEY_MASTER_SEQ_MASTER; 
CREATE SEQUENCE USERS_KEY_MASTER_SEQ_MASTER START WITH 1;
/
CREATE OR REPLACE TRIGGER USERS_KEY_MASTER_TRIG_MASTER
BEFORE INSERT ON USERS_KEY_MASTER
FOR EACH ROW
BEGIN
  SELECT USERS_KEY_MASTER_SEQ_MASTER.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
INSERT INTO USERS_KEY_MASTER(TOKEN) VALUES (0000);
commit;


SELECT link, token FROM SLAVES_KEY_MASTER ORDER BY MAX_DB_SIZE;
SELECT * FROM USERS_KEY_MASTER;
SELECT * FROM SLAVES_KEY_MASTER;

UPDATE SLAVES_KEY_MASTER
SET CURRET_DB_SIZE = 123
WHERE LINK LIKE '';
